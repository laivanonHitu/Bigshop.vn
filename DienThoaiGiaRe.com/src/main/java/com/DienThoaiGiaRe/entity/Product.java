package com.DienThoaiGiaRe.entity;
// Generated Dec 20, 2020, 2:43:06 PM by Hibernate Tools 5.4.21.Final

import java.sql.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product")
public class Product implements java.io.Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 2115884010592674597L;
	@Id
	@Column(name ="id")
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	
	@Column(name ="hidden")
	private Boolean hidden;
	
	@Column(name ="id_category", length = 255)
	private String idCategory;
	
	@Column(name ="image")
	private String image;
	
	@Column(name ="image_large")
	private String imageLarge;
	
	@Column(name ="image_thumnail")
	private String imageThumnail;
	
	@Column(name ="inventory")
	private Integer inventory;
	
	@Column(name ="name")
	private String name;
	
	@Column(name ="price")
	private Double price;
	
	@Column(name ="price_dis")
	private Double priceDis;
	
	@Column(name ="weight")
	private String weight;
	
	@Column(name ="specifications")
	private String specifications;
	
	@Column(name ="short_decription")
	private String shortDecription;
	
	@Column(name ="modifieddate")
	private Date modifieddate;
	
	@Column(name ="brand")
	private String brand;
	
	@Column(name ="product_code")
	private String productCode;
	
	public Product() {
	}

	public Product(int id) {
		this.id = id;
	}

	public Product(int id, Boolean hidden, String idCategory, String image, String imageLarge, String imageThumnail,
			Integer inventory, String name, Double price, Double priceDis, String weight, String specifications,
			String shortDecription, Date modifieddate, String brand, String productCode) {
		this.id = id;
		this.hidden = hidden;
		this.idCategory = idCategory;
		this.image = image;
		this.imageLarge = imageLarge;
		this.imageThumnail = imageThumnail;
		this.inventory = inventory;
		this.name = name;
		this.price = price;
		this.priceDis = priceDis;
		this.weight = weight;
		this.specifications = specifications;
		this.shortDecription = shortDecription;
		this.modifieddate = modifieddate;
		this.brand = brand;
		this.productCode = productCode;
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Boolean getHidden() {
		return this.hidden;
	}

	public void setHidden(Boolean hidden) {
		this.hidden = hidden;
	}

	public String getIdCategory() {
		return this.idCategory;
	}

	public void setIdCategory(String idCategory) {
		this.idCategory = idCategory;
	}

	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	public String getImageLarge() {
		return this.imageLarge;
	}

	public void setImageLarge(String imageLarge) {
		this.imageLarge = imageLarge;
	}

	public String getImageThumnail() {
		return this.imageThumnail;
	}

	public void setImageThumnail(String imageThumnail) {
		this.imageThumnail = imageThumnail;
	}

	public Integer getInventory() {
		return this.inventory;
	}

	public void setInventory(Integer inventory) {
		this.inventory = inventory;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Double getPrice() {
		return this.price;
	}

	public void setPrice(Double price) {
		this.price = price;
	}

	public Double getPriceDis() {
		return this.priceDis;
	}

	public void setPriceDis(Double priceDis) {
		this.priceDis = priceDis;
	}

	public String getWeight() {
		return this.weight;
	}

	public void setWeight(String weight) {
		this.weight = weight;
	}

	public String getDecription() {
		return this.specifications;
	}

	public void setDecription(String specifications) {
		this.specifications = specifications;
	}

	public String getShortDecription() {
		return this.shortDecription;
	}

	public void setShortDecription(String shortDecription) {
		this.shortDecription = shortDecription;
	}

	public Date getModifieddate() {
		return this.modifieddate;
	}

	public void setModifieddate(Date modifieddate) {
		this.modifieddate = modifieddate;
	}

	public String getBrand() {
		return this.brand;
	}

	public void setBrand(String brand) {
		this.brand = brand;
	}

	public String getProductCode() {
		return this.productCode;
	}

	public void setProductCode(String productCode) {
		this.productCode = productCode;
	}

	@Override
	public String toString() {
		return "Product [id=" + id + ", hidden=" + hidden + ", idCategory=" + idCategory + ", image=" + image
				+ ", imageLarge=" + imageLarge + ", imageThumnail=" + imageThumnail + ", inventory=" + inventory
				+ ", name=" + name + ", price=" + price + ", priceDis=" + priceDis + ", weight=" + weight
				+ ", specifications=" + specifications + ", shortDecription=" + shortDecription + ", modifieddate="
				+ modifieddate + ", brand=" + brand + ", productCode=" + productCode + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((brand == null) ? 0 : brand.hashCode());
		result = prime * result + ((specifications == null) ? 0 : specifications.hashCode());
		result = prime * result + ((hidden == null) ? 0 : hidden.hashCode());
		result = prime * result + id;
		result = prime * result + ((idCategory == null) ? 0 : idCategory.hashCode());
		result = prime * result + ((image == null) ? 0 : image.hashCode());
		result = prime * result + ((imageLarge == null) ? 0 : imageLarge.hashCode());
		result = prime * result + ((imageThumnail == null) ? 0 : imageThumnail.hashCode());
		result = prime * result + ((inventory == null) ? 0 : inventory.hashCode());
		result = prime * result + ((modifieddate == null) ? 0 : modifieddate.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((price == null) ? 0 : price.hashCode());
		result = prime * result + ((priceDis == null) ? 0 : priceDis.hashCode());
		result = prime * result + ((productCode == null) ? 0 : productCode.hashCode());
		result = prime * result + ((shortDecription == null) ? 0 : shortDecription.hashCode());
		result = prime * result + ((weight == null) ? 0 : weight.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Product other = (Product) obj;
		if (brand == null) {
			if (other.brand != null)
				return false;
		} else if (!brand.equals(other.brand))
			return false;
		if (specifications == null) {
			if (other.specifications != null)
				return false;
		} else if (!specifications.equals(other.specifications))
			return false;
		if (hidden == null) {
			if (other.hidden != null)
				return false;
		} else if (!hidden.equals(other.hidden))
			return false;
		if (id != other.id)
			return false;
		if (idCategory == null) {
			if (other.idCategory != null)
				return false;
		} else if (!idCategory.equals(other.idCategory))
			return false;
		if (image == null) {
			if (other.image != null)
				return false;
		} else if (!image.equals(other.image))
			return false;
		if (imageLarge == null) {
			if (other.imageLarge != null)
				return false;
		} else if (!imageLarge.equals(other.imageLarge))
			return false;
		if (imageThumnail == null) {
			if (other.imageThumnail != null)
				return false;
		} else if (!imageThumnail.equals(other.imageThumnail))
			return false;
		if (inventory == null) {
			if (other.inventory != null)
				return false;
		} else if (!inventory.equals(other.inventory))
			return false;
		if (modifieddate == null) {
			if (other.modifieddate != null)
				return false;
		} else if (!modifieddate.equals(other.modifieddate))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (price == null) {
			if (other.price != null)
				return false;
		} else if (!price.equals(other.price))
			return false;
		if (priceDis == null) {
			if (other.priceDis != null)
				return false;
		} else if (!priceDis.equals(other.priceDis))
			return false;
		if (productCode == null) {
			if (other.productCode != null)
				return false;
		} else if (!productCode.equals(other.productCode))
			return false;
		if (shortDecription == null) {
			if (other.shortDecription != null)
				return false;
		} else if (!shortDecription.equals(other.shortDecription))
			return false;
		if (weight == null) {
			if (other.weight != null)
				return false;
		} else if (!weight.equals(other.weight))
			return false;
		return true;
	}

}
